"""estrutura inicial com foto_path

Revision ID: cea5b382706d
Revises: 
Create Date: 2025-07-28 16:26:29.104302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cea5b382706d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pacientes_id'), table_name='pacientes')
    op.drop_table('pacientes')
    op.drop_index(op.f('ix_medicos_id'), table_name='medicos')
    op.drop_table('medicos')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_consultorios_id'), table_name='consultorios')
    op.drop_table('consultorios')
    op.drop_index(op.f('ix_clinicas_id'), table_name='clinicas')
    op.drop_table('clinicas')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinicas',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clinicas_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dominio', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cnpj', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('endereco', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('plano', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('forma_pagamento', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='clinicas_pkey'),
    sa.UniqueConstraint('cnpj', name='clinicas_cnpj_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('dominio', name='clinicas_dominio_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_clinicas_id'), 'clinicas', ['id'], unique=False)
    op.create_table('consultorios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('clinica_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clinica_id'], ['clinicas.id'], name=op.f('consultorios_clinica_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('consultorios_pkey'))
    )
    op.create_index(op.f('ix_consultorios_id'), 'consultorios', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('perfil', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('clinica_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clinica_id'], ['clinicas.id'], name='users_clinica_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', 'clinica_id', name='uix_email_clinica', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_table('medicos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pronomeTratamento', postgresql.ENUM('Dr.', 'Dra.', name='pronome_tratamento'), autoincrement=False, nullable=False),
    sa.Column('especialidade', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('crm', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tipoContratacao', postgresql.ENUM('CLT', 'PJ', 'Autônomo', name='tipos_contratacao'), autoincrement=False, nullable=False),
    sa.Column('cpfCnpj', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('banco', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('agencia', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('conta', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tipoConta', postgresql.ENUM('Corrente', 'Poupança', 'Pagamento', name='tipos_conta'), autoincrement=False, nullable=True),
    sa.Column('percentualRepasse', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('diasAtendimento', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('horarioInicio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('horarioFim', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('intervalo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('foto', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('clinica_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clinica_id'], ['clinicas.id'], name=op.f('medicos_clinica_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('medicos_pkey'))
    )
    op.create_index(op.f('ix_medicos_id'), 'medicos', ['id'], unique=False)
    op.create_table('pacientes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clinica_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sexo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data_nascimento', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('cpf', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('observacoes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clinica_id'], ['clinicas.id'], name=op.f('pacientes_clinica_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('pacientes_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pacientes_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('pacientes_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_pacientes_id'), 'pacientes', ['id'], unique=False)
    # ### end Alembic commands ###
